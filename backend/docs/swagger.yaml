basePath: /
definitions:
  handlers.CreateRoomReq:
    properties:
      id:
        example: "1"
        type: string
      name:
        example: Room_1
        type: string
    type: object
  models.CreateUserReq:
    properties:
      email:
        example: admin@example.com
        type: string
      password:
        example: password12345
        minLength: 8
        type: string
      username:
        example: Chat_User_1
        type: string
    required:
    - username
    type: object
  models.LoginUserReq:
    properties:
      email:
        example: admin@example.com
        type: string
      password:
        example: password12345
        minLength: 8
        type: string
    type: object
  util.Response:
    properties:
      message:
        example: response message
        type: string
    type: object
info:
  contact:
    email: raitermark@proton.me
    name: Mark Raiter
  description: Docs for chat app backend API
  title: CHAT APP
  version: "1.0"
paths:
  /health:
    get:
      consumes:
      - '*/*'
      description: Ping health of API for Docker.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the status of server.
      tags:
      - Health
  /login:
    post:
      consumes:
      - application/json
      description: Login
      operationId: login
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.LoginUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.Response'
        "406":
          description: Not Acceptable
          schema:
            $ref: '#/definitions/util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.Response'
      summary: Login
      tags:
      - Auth
  /logout:
    get:
      description: Logout
      operationId: logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      summary: Logout
      tags:
      - Auth
  /signup:
    post:
      consumes:
      - application/json
      description: create account
      operationId: create-account
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/util.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.Response'
        "406":
          description: Not Acceptable
          schema:
            $ref: '#/definitions/util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.Response'
      summary: SignUp
      tags:
      - Auth
  /ws/create-room:
    post:
      consumes:
      - application/json
      description: create room
      operationId: create-room
      parameters:
      - description: room info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateRoomReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/util.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.Response'
        "406":
          description: Not Acceptable
          schema:
            $ref: '#/definitions/util.Response'
      summary: CreateRoom
      tags:
      - Websocket
  /ws/get-clients:
    get:
      description: get all clients in the room
      operationId: get-clients
      parameters:
      - description: room_id
        in: path
        name: room_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      summary: GetClients
      tags:
      - Websocket
  /ws/get-rooms:
    get:
      description: get all rooms
      operationId: get-rooms
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
      summary: GetRooms
      tags:
      - Websocket
  /ws/join-room:
    get:
      description: join room
      operationId: join-room
      parameters:
      - description: room_id
        in: path
        name: room_id
        required: true
        type: string
      - description: user_id
        in: query
        name: user_id
        required: true
        type: string
      - description: username
        in: query
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/util.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.Response'
      summary: JoinRoom
      tags:
      - Websocket
swagger: "2.0"
